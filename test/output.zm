
enum SleepState {
    AWAKE,
    SLEEPING
};

SleepState g_sleepstate = AWAKE;

void set_sleep_state(SleepState state)
{
    control.set_sleeping(state == SLEEPING ? true : false);
}

SleepState get_sleepstage()
{
    return g_sleepstate;
}

record TestOutput
{
    int         stim_num;
    int         id;
    ItemType    type;
    string      fn;
    int         marker;
};

void prac_output_append(TestOutput out)
{
    expdb.add_trial_data_record(
            namespace_name, "1", "Practice results"
            );
    expdb.set_trial_data_int_field(
            "stimulus_number", out.stim_num, "Stimulus number"
            );
    expdb.set_trial_data_int_field(
            "id", out.id, "Stimulus id"
            );
    expdb.set_trial_data_enum_field(
            "type", string(out.type), "Stimulus type"
            );
    expdb.set_trial_data_int_field(
            "marker", out.marker, "Marker"
            );
    expdb.set_trial_data_string_field(
            "stimulus_file", out.fn, "Played stimulus file"
            );
    expdb.set_trial_data_enum_field(
            "sleep_state", string(g_sleepstate), "Sleeping/Awake"
            );
}

void test_output_append(TestOutput out)
{
    expdb.add_trial_data_record(
            namespace_name, "2", "Test results"
            );
    expdb.set_trial_data_int_field(
            "stimulus_number", out.stim_num, "Stimulus number"
            );
    expdb.set_trial_data_int_field(
            "id", out.id, "Stimulus id"
            );
    expdb.set_trial_data_enum_field(
            "type", string(out.type), "Stimulus type"
            );
    expdb.set_trial_data_int_field(
            "marker", out.marker, "Marker"
            );
    expdb.set_trial_data_string_field(
            "stimulus_file", out.fn, "Played stimulus file"
            );
    expdb.set_trial_data_enum_field(
            "sleep_state", string(g_sleepstate), "Sleeping/Awake"
            );
}

